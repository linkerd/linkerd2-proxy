[package]
name = "linkerd2-app-core"
version = "0.1.0"
authors = ["Linkerd Developers <cncf-linkerd-dev@lists.cncf.io>"]
license = "Apache-2.0"
edition = "2018"
publish = false
description = """
Core infrastructure for the proxy application

This crate conglomerates proxy configuration, runtime administration, etc,
independently of the inbound and outbound proxy logic.
"""

[features]
mock-orig-dst  = ["linkerd2-proxy-transport/mock-orig-dst"]

[dependencies]
bytes = "1"
http = "0.2"
http-body = "0.4"
hyper = { version = "0.14.2", features = ["http1", "http2"] }
futures = "0.3"
indexmap = "1.0"
ipnet = "2.0"
linkerd2-addr = { path = "../../addr" }
linkerd2-cache = { path = "../../cache" }
linkerd2-buffer = { path = "../../buffer" }
linkerd2-concurrency-limit = { path = "../../concurrency-limit" }
linkerd2-conditional = { path = "../../conditional" }
linkerd2-dns = { path = "../../dns" }
linkerd2-drain = { path = "../../drain", features = ["retain"] }
linkerd2-duplex = { path = "../../duplex" }
linkerd2-errno = { path = "../../errno" }
linkerd2-error = { path = "../../error" }
linkerd2-error-metrics = { path = "../../error-metrics" }
linkerd2-error-respond = { path = "../../error-respond" }
linkerd2-exp-backoff = { path = "../../exp-backoff" }
linkerd2-http-classify = { path = "../../http-classify" }
linkerd2-http-metrics = { path = "../../http-metrics" }
linkerd2-metrics = { path = "../../metrics" }
linkerd2-transport-header = { path = "../../transport-header" }
linkerd2-opencensus = { path = "../../opencensus" }
linkerd2-proxy-core = { path = "../../proxy/core" }
linkerd2-proxy-api = { git = "https://github.com/linkerd/linkerd2-proxy-api", branch = "ver/tonic-git" }
linkerd2-proxy-api-resolve = { path = "../../proxy/api-resolve" }
linkerd2-proxy-discover = { path = "../../proxy/discover" }
linkerd2-proxy-identity = { path = "../../proxy/identity" }
linkerd2-proxy-http = { path = "../../proxy/http" }
linkerd2-proxy-resolve = { path = "../../proxy/resolve" }
linkerd2-proxy-dns-resolve = { path = "../../proxy/dns-resolve" }
linkerd2-proxy-tap = { path = "../../proxy/tap" }
linkerd2-proxy-tcp = { path = "../../proxy/tcp" }
linkerd2-proxy-transport = { path = "../../proxy/transport" }
linkerd2-reconnect = { path = "../../reconnect" }
linkerd2-retry = { path = "../../retry" }
linkerd2-timeout = { path = "../../timeout" }
linkerd2-tracing = { path = "../../tracing" }
linkerd2-service-profiles = { path = "../../service-profiles" }
linkerd2-stack = { path = "../../stack" }
linkerd2-stack-metrics = { path = "../../stack/metrics" }
linkerd2-stack-tracing = { path = "../../stack/tracing" }
linkerd2-trace-context = { path = "../../trace-context" }
regex = "1.0.0"
tokio = { version = "1", features = ["macros", "sync", "parking_lot"]}
tonic = { version = "0.3", default-features = false, features = ["prost"] }
tracing = "0.1.22"
tracing-futures = "0.2"
pin-project = "1"

[dependencies.tower]
version = "0.4"
# disable tower's tracing `log` integration for performance reasons, since we
# will consume tower's traces as traces.
default-features = false
features = [
    "make",
    "spawn-ready",
    "timeout",
    "util",
]

[target.'cfg(target_os = "linux")'.dependencies]
libc = "0.2"
procinfo = "0.4.2"

[dev-dependencies]
linkerd2-proxy-api = { git = "https://github.com/linkerd/linkerd2-proxy-api", branch = "ver/tonic-git", features = ["arbitrary"] }
prost-types = "0.7.0"
