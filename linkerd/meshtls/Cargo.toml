[package]
name = "linkerd-meshtls"
version = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
edition = "2018"
publish = { workspace = true }

[features]
rustls = ["linkerd-meshtls-rustls", "__has_any_tls_impls"]
rustls-aws-lc = ["rustls", "linkerd-meshtls-rustls/aws-lc"]
rustls-aws-lc-fips = ["rustls-aws-lc", "linkerd-meshtls-rustls/aws-lc-fips"]
rustls-ring = ["rustls", "linkerd-meshtls-rustls/ring"]
boring = ["linkerd-meshtls-boring", "__has_any_tls_impls"]
boring-fips = ["boring", "linkerd-meshtls-boring/fips"]
# Enabled if *any* TLS impl is enabled.
__has_any_tls_impls = []

[dependencies]
futures = { version = "0.3", default-features = false }
pin-project = "1"

linkerd-dns-name = { path = "../dns/name" }
linkerd-error = { path = "../error" }
linkerd-identity = { path = "../identity" }
linkerd-io = { path = "../io" }
linkerd-meshtls-boring = { path = "boring", optional = true }
linkerd-meshtls-rustls = { path = "rustls", optional = true, default-features = false }
linkerd-stack = { path = "../stack" }
linkerd-tls = { path = "../tls" }

[dev-dependencies]
tokio = { version = "1", features = ["macros", "net", "rt-multi-thread"] }
tracing = { workspace = true }
rcgen = { version = "0.14.3", default-features = false, features = ["crypto", "pem", "aws_lc_rs"] }

linkerd-conditional = { path = "../conditional" }
linkerd-proxy-transport = { path = "../proxy/transport" }
linkerd-tls-test-util = { path = "../tls/test-util" }
linkerd-tracing = { path = "../tracing", features = ["ansi"] }
