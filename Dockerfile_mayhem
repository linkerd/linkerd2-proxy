# Build Stage
FROM ubuntu:20.04 as builder

## Install build dependencies.
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y cmake clang curl
RUN curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
RUN ${HOME}/.cargo/bin/rustup default nightly
RUN ${HOME}/.cargo/bin/cargo install -f cargo-fuzz

## Add source code to the build stage.
ADD . /linkerd2-proxy
WORKDIR /linkerd2-proxy

RUN cd linkerd/transport-header/fuzz && ${HOME}/.cargo/bin/cargo +nightly fuzz build

# Inbound
WORKDIR /linkerd2-proxy

RUN cd linkerd/app/inbound/fuzz/ && ${HOME}/.cargo/bin/cargo +nightly fuzz build

# tls 
WORKDIR /linkerd2-proxy

RUN cd linkerd/tls/fuzz/ && ${HOME}/.cargo/bin/cargo +nightly fuzz build

# addr
WORKDIR /linkerd2-proxy

RUN cd linkerd/addr/fuzz/ && ${HOME}/.cargo/bin/cargo +nightly fuzz build

# proxy
WORKDIR /linkerd2-proxy

RUN cd linkerd/proxy/http/fuzz/ && ${HOME}/.cargo/bin/cargo +nightly fuzz build

# dns
WORKDIR /linkerd2-proxy

RUN cd linkerd/dns/fuzz/ && ${HOME}/.cargo/bin/cargo +nightly fuzz build


# Package Stage
FROM ubuntu:20.04

COPY --from=builder linkerd2-proxy/linkerd/transport-header/fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_target_raw /
COPY --from=builder linkerd2-proxy/linkerd/transport-header/fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_target_structured /

#inbound

COPY --from=builder linkerd2-proxy/linkerd/app/inbound/fuzz/target/x86_64-unknown-linux-gnu/release/inbound_fuzz_target_1 /

# tls 
COPY --from=builder linkerd2-proxy/linkerd/tls/fuzz/target/x86_64-unknown-linux-gnu/release/tls_fuzz_target_1 /

# addr

COPY --from=builder linkerd2-proxy/linkerd/addr/fuzz/target/x86_64-unknown-linux-gnu/release/addr_fuzz_target_1 /

# proxy
COPY --from=builder linkerd2-proxy/linkerd/proxy/http/fuzz/target/x86_64-unknown-linux-gnu/release/http_fuzz_target_1 /

# dns
COPY --from=builder linkerd2-proxy/linkerd/dns/fuzz/target/x86_64-unknown-linux-gnu/release/dns_fuzz_target_1 /
