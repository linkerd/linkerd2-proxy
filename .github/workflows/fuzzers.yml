name: fuzzers

on:
  # Only run on PRs that touch fuzzed crates
  pull_request:
    paths:
      - 'linkerd/addr/**'
      - 'linkerd/app/inbound/**'
      - 'linkerd/dns/**'
      - 'linkerd/proxy/http/**'
      - 'linkerd/tls/**'
      - 'linkerd/transport-header/**'
      - .github/workflows/fuzzers.yml

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

permissions:
  contents: read

jobs:
  list-changed:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.60.0-bullseye
    steps:
      - run: apt update && apt install -y jo
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: tj-actions/changed-files@ae90a0b602c90d598c0c027a519493c1a069543e
        id: changed-files
      - name: list changed crates
        id: list-changed
        shell: bash
        run: |
          files="${{ steps.changed-files.outputs.all_changed_files }}"
          # Find the nearest fuzzer crate, or nothing.
          find_fuzz_dir() {
            d=$(dirname "$1")
            if [ "$d" = . ]; then
              return
            elif [ -d "$d" ] && [[ "$d" = */fuzz ]]; then
              echo "$d"
            elif [ -f "$d/fuzz/Cargo.toml" ]; then
              echo "$d/fuzz"
            else
              find_fuzz_dir "$d"
            fi
          }
          list_dirs() {
            dirs=""
            for file in $(echo $*) ; do
              if [ "$file" = .github/workflows/fuzzers.yml ]; then
                dirs=$(find . -type d -name fuzz)
                break
              fi
              d=$(find_fuzz_dir "$file")
              if [ -n "$d" ]; then
                if [ -z "$dirs" ]; then
                  dirs="$d"
                else
                  dirs="$dirs $d"
                fi
              fi
            done
            echo "${dirs}" | tr ' ' "\n" | sort -u
          }
          dirs=$(list_dirs $files)
          echo "$dirs"
          echo "::set-output name=dirs::$(echo "$dirs" | jo -a)"
    outputs:
      dirs: ${{ steps.list-changed.outputs.dirs }}

  # Build fuzzers for any changed crates.
  build:
    needs: [list-changed]
    timeout-minutes: 40
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.60.0-bullseye
    strategy:
      matrix:
        dir: ${{ fromJson(needs.list-changed.outputs.dirs) }}
    steps:
      - run: rustup toolchain add nightly
      - run: cargo install cargo-fuzz
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - working-directory: ${{matrix.dir}}
        run: cargo +nightly fetch
      - working-directory: ${{matrix.dir}}
        run: cargo +nightly fuzz build
