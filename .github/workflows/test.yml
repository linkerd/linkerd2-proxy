name: test

on:
  pull_request: {}

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

permissions:
  contents: read

jobs:

  # Run non-integration tests. This should be quick.
  test-unit:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.56.0-buster
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - run: |
          cargo test --all --no-run \
            --exclude=linkerd-app \
            --exclude=linkerd-app-admin \
            --exclude=linkerd-app-core \
            --exclude=linkerd-app-gateway \
            --exclude=linkerd-app-inbound \
            --exclude=linkerd-app-integration \
            --exclude=linkerd-app-outbound \
            --exclude=linkerd-meshtls \
            --exclude=linkerd-meshtls-boring \
            --exclude=linkerd-meshtls-rustls \
            --exclude=linkerd2-proxy
      - run: |
          cargo test --all \
            --exclude=linkerd-app \
            --exclude=linkerd-app-admin \
            --exclude=linkerd-app-core \
            --exclude=linkerd-app-gateway \
            --exclude=linkerd-app-inbound \
            --exclude=linkerd-app-integration \
            --exclude=linkerd-app-outbound \
            --exclude=linkerd-meshtls \
            --exclude=linkerd-meshtls-boring \
            --exclude=linkerd-meshtls-rustls \
            --exclude=linkerd2-proxy

  # Test the default meshtls backend.
  test-meshtls:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.56.0-buster
    steps:
      - run: apt update && apt install -y cmake clang golang # for boring
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - working-directory: ./linkerd/meshtls
        run: cargo test --all-features --no-run
      - working-directory: ./linkerd/meshtls
        run: cargo test --all-features
      - working-directory: ./linkerd/meshtls
        run: |
          cargo test --no-run \
            --package=linkerd-meshtls-boring \
            --package=linkerd-meshtls-rustls
      - working-directory: ./linkerd/meshtls
        run: |
          cargo test \
            --package=linkerd-meshtls-boring \
            --package=linkerd-meshtls-rustls
      # Run clippy on the boring components while we have the dependencies instaled.
      - run: rustup component add clippy
      - working-directory: linkerd/meshtls
        run: cargo clippy --features=boring --all-targets

  # Run only the app-level tests. These may take longer to compile (usually due to very large stack
  # types) and have the potential to be flakey as they depend on opening sockets and may have timing
  # sensitivity.
  test-integration:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.56.0-buster
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - run: |
          cargo test --no-run \
            --package=linkerd-app \
            --package=linkerd-app-admin \
            --package=linkerd-app-core \
            --package=linkerd-app-gateway \
            --package=linkerd-app-inbound \
            --package=linkerd-app-integration \
            --package=linkerd-app-outbound
      - run: |
          cargo test \
            --package=linkerd-app \
            --package=linkerd-app-admin \
            --package=linkerd-app-core \
            --package=linkerd-app-gateway \
            --package=linkerd-app-inbound \
            --package=linkerd-app-integration \
            --package=linkerd-app-outbound
