name: rust-toolchain

on:
  pull_request:
    paths:
      - rust-toolchain
      - "**Dockerfile"
      - ".github/workflows/*"
      - ".github/**/Dockerfile"

permissions:
  contents: read

jobs:
  dockerfiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: |
          VERSION="$(cat rust-toolchain)"
          ex=0
          while IFS= read file ; do
            versions=$(sed -nE 's/^ARG RUST_VERSION=([^ ]+)/\1/p' "$file")
            if [ -z "$versions" ]; then
              echo "::error file=$file::$file missing 'RUST_VERSION' argument"
              ex=$((ex + 1))
            fi
            for mismatch in $(echo "$version" | grep -vF "$VERSION" || true) ; do
              echo "::error file=$file::$file uses incorrect rust version(s): $mismatch"
              ex=$((ex + 1))
            done
          done < <(find . -name Dockerfile -and -not -path './.github/actions/release-tag-meta/*')
          exit $ex

  workflows:
    runs-on: ubuntu-latest
    container: ghcr.io/linkerd/dev:v19-yq
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: |
          VERSION="$(cat rust-toolchain)"
          ex=0
          while IFS= read file ; do
            echo "# $file"
            while IFS= read image ; do
              if [[ "$image" =~ ^docker://(docker.io/library/)?rust: ]]; then
                tag="${image##*rust:}"
                v="${tag%%-*}"
                if [[ "$v" != "$VERSION" ]]; then
                  echo "::warning file=$file::$file uses incorrect rust version: $v"
                  ex=$((ex + 1))
                fi
              fi
            done < <(yq '.jobs[] | .container.image // .container' "$file")
          done < <(find .github/workflows -name '*.yml')
          exit $ex
