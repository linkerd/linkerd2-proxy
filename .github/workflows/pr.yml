name: Pull Request
on: pull_request

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUSTFLAGS: "-D warnings -D deprecated -C debuginfo=0"

concurrency:
  group:  ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  meta:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - id: build
        uses: tj-actions/changed-files@aa08304bd477b800d468db44fe10f6c61f7f7b11
        with:
          files: |
            .github/workflows/pr.yml
            justfile
            Dockerfile
      - id: actions
        uses: tj-actions/changed-files@aa08304bd477b800d468db44fe10f6c61f7f7b11
        with:
          files: |
            .github/workflows/**
            .devcontainer/*
      - id: cargo
        uses: tj-actions/changed-files@aa08304bd477b800d468db44fe10f6c61f7f7b11
        with:
          files_ignore: 'Cargo.toml'
          files: |
            **/Cargo.toml
      - id: cargo-crates
        if: steps.cargo.outputs.any_changed == 'true'
        run: ./.github/list-crates.sh ${{ steps.cargo.outputs.all_changed_files }}
      - id: rust
        uses: tj-actions/changed-files@aa08304bd477b800d468db44fe10f6c61f7f7b11
        with:
          files: |
            **/*.rs
            Cargo.lock
    outputs:
      is_dependabot: ${{ github.actor == 'dependabot[bot]' }}
      any_changed: ${{ steps.build.outputs.any_changed == 'true' || steps.actions.outputs.any_changed == 'true' || steps.cargo.outputs.any_change == 'true' || steps.rust.outputs.any_changed == 'true' }}
      build_changed: ${{ steps.build.outputs.any_changed }}
      actions_changed: ${{ steps.build.outputs.any_changed == 'true' || steps.actions.outputs.any_changed == 'true' }}
      cargo_changed: ${{ steps.cargo.outputs.any_changed == 'true' }}
      cargo_crates: ${{ steps.cargo-crates.outputs.crates == 'true' }}
      rust_changed: ${{ steps.build.outputs.any_changed == 'true' ||  steps.rust.outputs.any_changed == 'true' }}

  info:
    timeout-minutes: 3
    needs: meta
    runs-on: ubuntu-latest
    steps:
      - name: Info
        run: |
          echo 'github.actor: ${{ github.actor }}'
          echo 'github.event_name: ${{ github.event_name }}'
          echo 'github.event.pull_request.number: ${{ github.event.pull_request.number }}'
          echo 'needs.meta.outputs.is_dependabot: ${{ needs.meta.outputs.is_dependabot }}'
          echo 'needs.meta.outputs.any_changed: ${{ needs.meta.outputs.any_changed }}'
          echo 'needs.meta.outputs.actions_changed: ${{ needs.meta.outputs.actions_changed }}'
          echo 'needs.meta.outputs.cargo_changed: ${{ needs.meta.outputs.cargo_changed }}'
          echo 'needs.meta.outputs.cargo_crates: ${{ needs.meta.outputs.cargo_crates }}'
          echo 'needs.meta.outputs.rust_changed: ${{ needs.meta.outputs.rust_changed }}'

  actions:
    needs: meta
    if: needs.meta.outputs.actions_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: linkerd/dev/actions/setup-tools@v43
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - run: just action-lint
      - run: just action-dev-check

  rust:
    needs: meta
    if: needs.meta.outputs.cargo_changed == 'true' || needs.meta.outputs.rust_changed == 'true'
    runs-on: ubuntu-latest
    container: ghcr.io/linkerd/dev:v43-rust
    permissions:
      contents: read
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - run: git config --global --add safe.directory "$PWD" # actions/runner#2033
      - run: just fetch
      - name: Run cargo deny check bans licenses sources
        uses: EmbarkStudios/cargo-deny-action@64015a69ee7ee08f6c56455089cdaf6ad974fd15
        with:
          command: check bans licenses sources
      - run: just check-fmt
      - run: just clippy
      - run: just doc
      - run: just test --exclude=linkerd2-proxy --no-run
      - run: just test --exclude=linkerd2-proxy

  rust-crates:
    needs: meta
    if: needs.meta.outputs.cargo_changed == 'true'
    timeout-minutes: 20
    runs-on: ubuntu-latest
    container: ghcr.io/linkerd/dev:v43-rust
    strategy:
      matrix:
        crate: ${{ fromJson(needs.meta.outputs.cargo_crates) }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - run: git config --global --add safe.directory "$PWD" # actions/runner#2033
      - run: just fetch
      - run: just check-crate ${{ matrix.crate }}

  linkerd-install:
    needs: meta
    if: needs.meta.outputs.cargo_changed == 'true' || needs.meta.outputs.rust_changed == 'true'
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: linkerd/dev/actions/setup-tools@v43
      - name: scurl https://run.linkerd.io/install-edge | sh
        run: |
          scurl https://run.linkerd.io/install-edge | sh
          echo "PATH=$PATH:$HOME/.linkerd2/bin" >> "$GITHUB_ENV"
          export PATH="$PATH:$HOME/.linkerd2/bin"
          tag=$(linkerd version --client --short)
          echo "linkerd $tag"
          echo "LINKERD_TAG=$tag" >> "$GITHUB_ENV"
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - run: just docker
      - run: just-k3d create
      - run: just k3d-load-linkerd
      - run: just linkerd-install
      - run: just linkerd-check-contol-plane-proxy
        env:
          TMPDIR: ${{ runner.temp }}

  ship-it:
    timeout-minutes: 3
    needs: [meta, actions, rust, rust-crates, linkerd-install]
    if: always()
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Results
        run: |
          echo 'needs.actions.result: ${{ needs.rust.result }}'
          echo 'needs.rust.result: ${{ needs.rust.result }}'
          echo 'needs.rust-crates.result: ${{ needs.rust-crates.result }}'
          echo 'needs.linkerd-install.result: ${{ needs.linkerd-install.result }}'

      - name: Verify jobs
        # All jobs must succeed or be skipped.
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        if: needs.meta.outputs.is_dependabot == 'true' && needs.meta.outputs.any_changed == 'true'
      - name: 'Merge dependabot changes'
        if: needs.meta.outputs.is_dependabot == 'true' && needs.meta.outputs.any_changed == 'true'
        run: gh pr merge '${{ github.event.pull_request.number }}' --auto --squash
        env:
          GH_TOKEN: ${{ github.token }}
